{"version":3,"sources":["utils.js","config.js","localStorage.js","hooks.js","Hero.js","Main.js","Page.js","About.js","Bids.js","Dev.js","App.js","index.js"],"names":["wait","ms","Promise","res","setTimeout","pollCompletion","completionFn","a","INFURA_ID","providerOptions","walletlink","package","WalletLink","options","appName","infuraId","chainId","walletconnect","WalletConnectProvider","CHAIN","contractAddrs","mainnet","localhost","KBC","TokenURI","BlindAuction","rinkeby","getActiveContractAddresses","KBCABI","BlindAuctionABI","web3Modal","Web3Modal","network","cacheProvider","EthContext","createContext","EthContextProvider","children","useState","signer","setSigner","provider","setProvider","contracts","setContracts","connectedAddress","setConnectedAddress","connected","setConnected","loading","setLoading","onConnect","useCallback","connect","instance","ethers","providers","Web3Provider","getSigner","getAddress","getContracts","onDisconnect","clearCachedProvider","useEffect","cachedProvider","Provider","value","chain","Contract","BID_INFO","updateBidState","bidder","hashedBid","state","storedBidInfo","JSON","parse","localStorage","getItem","setItem","stringify","storeBid","bidInfo","bidderInfo","getBids","refreshBidState","filters","CreateBid","createLogs","queryFilter","createBids","WithdrawBid","withdrawLogs","withdrawBids","RevealBid","revealLogs","revealBids","forEach","bid","args","hash","console","log","window","__clearLocalStorage","removeItem","nullAddr","useEthContext","useContext","useBiddingPhase","biddingPhase","setBiddingPhase","refresh","auctionPhase","phase","Number","toString","useBids","outstandingBids","setOutstandingBids","isLoading","setIsLoading","ls","bidHash","bidState","submitBid","tokenId","bidAmount","hashBid","utils","parseEther","placeSealedBid","nonNullBidder","hashToSealedBids","then","withdrawBid","withdrawSealedBid","nullBidder","revealBid","tokenIdToHighestUnsealedBid","highestBid","highestBidAmount","formatEther","amount","amountToIncreaseBid","Math","max","unsealBid","String","claimToken","exists","bids","useHighestBidder","highestBidder","setHighestBidder","Hero","setup","p5","canvasRef","createCanvas","innerWidth","innerHeight","parent","draw","noLoop","noStroke","colorMode","HSL","colors","color","times","i","c","x","random","width","y","height","cix","noise","fill","_x","_y","rad","shapePointCount","shapeNoiseDivisor","shapeCoords","point","progress","TWO_PI","coords","getXYRotation","__x","__y","_z","map","beginShape","curveVertex","length","endShape","noiseCircle","translate","className","deg","radius","cx","cy","sin","cos","t","fn","out","push","Main","portraitData","setPortraitData","data","shuffle","slice","Helmet","name","content","property","style","gridColumnStart","gridColumnEnd","border","backgroundColor","padding","textAlign","gridRowStart","gridRowEnd","fontSize","d","Thumbnail","Connect","wordWrap","href","target","rel","to","src","onClick","Page","id","useParams","setExists","owner","setOwner","ownerOf","useTokenExists","tokenExists","tokenOwner","margin","BiddingForm","setBidAmount","placeholder","onChange","e","type","Object","values","filter","BidRow","About","Bids","BiddingPhases","Dev","changeAuctionPhaseBidding","changeAuctionPhasePaused","changeAuctionPhaseReveal","changeAuctionPhaseClaim","ScrollToTop","pathname","useLocation","scrollTo","basename","location","includes","App","path","element","exact","CONTRACT_ADDR","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fad35ce4.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\n\nexport const wait = ms => new Promise(res => setTimeout(res, ms))\n\nexport const pollCompletion = (completionFn, ms=500) => new Promise(async res => {\n  while (true) {\n    const isComplete = await completionFn()\n    if (isComplete) return res()\n    else await wait(ms)\n  }\n})\n\n\nexport const fmt = (n) => {\n  const r = Math.floor(n)\n  if (r < 10) return '0' + r\n  else return '' + r\n}\n\nexport function times(n, fn) {\n  const out = []\n  for (let i = 0; i < n; i++) {\n    out.push(fn(i))\n  }\n  return out\n}","import { createContext, useCallback, useContext, useState, useEffect } from 'react'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport WalletLink from 'walletlink'\nimport { ethers } from 'ethers'\nimport Web3Modal from 'web3modal'\n\n\nconst INFURA_ID = 'deb04a4c6ec3473591234f198e9e4955'\nconst CHAIN_ID = 1\n\nexport const providerOptions = {\n  walletlink: {\n    package: WalletLink,\n    options: {\n      appName: 'KeynesianBeautyContest',\n      infuraId: INFURA_ID,\n      chainId: CHAIN_ID,\n    }\n  },\n  walletconnect: {\n    package: WalletConnectProvider,\n    options: {\n      infuraId: INFURA_ID\n    }\n  }\n};\n\nexport const CHAIN = 'rinkeby'\n\nexport const contractAddrs = {\n  mainnet: {},\n  localhost: {\n    KBC: '0x5FbDB2315678afecb367f032d93F642f64180aa3',\n    TokenURI: '0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0',\n    BlindAuction: '0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9'\n  },\n  rinkeby: {\n    KBC: '0x97008EDA4194d7be002D1b22CDd249CcB1169FEa',\n    BlindAuction: '0x3C872e8358A353714b42657B4e90c72d0d873dAF',\n    TokenURI: '0x1d9925464f2067d84D232Fc7440f957dA0a9412B'\n  }\n}\n\nexport function getActiveContractAddresses() {\n  return contractAddrs[CHAIN]\n}\n\nexport const KBCABI = [\n  'function exists(uint tokenId) view returns (bool)',\n  'function ownerOf(uint tokenId) view returns (address)',\n]\n\nexport const BlindAuctionABI = [\n  'function hashBid(uint tokenId, uint amount, address bidder) pure returns (bytes32)',\n\n  'function placeSealedBid(bytes32 bidHash) payable',\n  'function unsealBid(uint tokenId, uint amount) payable',\n  'function claimToken(uint tokenId)',\n\n  'function withdrawSealedBid(bytes32 bidHash)',\n\n  'function auctionPhase() view returns (uint phase)',\n  'function hashToSealedBids(bytes32 hash) view returns (tuple(address bidder, uint stake))',\n  'function tokenIdToHighestUnsealedBid(uint tokenId) view returns (tuple(address bidder, uint amount))',\n\n  'event CreateBid(bytes32 indexed hash, uint stake, address indexed bidder)',\n  'event WithdrawBid(bytes32 indexed hash, address indexed bidder)',\n  'event RevealBid(bytes32 indexed hash, uint256 indexed tokenId, uint256 amount, address indexed bidder)',\n\n  'function changeAuctionPhaseBidding()',\n  'function changeAuctionPhasePaused()',\n  'function changeAuctionPhaseReveal()',\n  'function changeAuctionPhaseClaim()',\n]\n\n\nconst web3Modal = new Web3Modal({\n  network: CHAIN,\n  cacheProvider: true,\n  providerOptions,\n});\n\n\n\nexport const EthContext = createContext()\n\n\nexport const EthContextProvider = ({ children }) => {\n  const [signer, setSigner] = useState(null)\n  const [provider, setProvider] = useState(null)\n  const [contracts, setContracts] = useState(null)\n  const [connectedAddress, setConnectedAddress] = useState(null)\n  const [connected, setConnected] = useState(false)\n  const [loading, setLoading] = useState(true)\n\n  const onConnect = useCallback(async () => {\n    const instance = await web3Modal.connect()\n    const provider = new ethers.providers.Web3Provider(instance)\n    const signer = provider.getSigner()\n    const connectedAddress = await signer.getAddress()\n    const contracts = getContracts(CHAIN, provider)\n\n    // const contractCode = await signer.provider.getCode(getActiveContractAddresses().BlindAuction)\n    // console.log(contractCode)\n\n    setProvider(provider)\n    setConnectedAddress(connectedAddress)\n    setSigner(signer)\n    setContracts(contracts)\n    setConnected(true)\n    setLoading(false)\n  }, [])\n\n  const onDisconnect = useCallback(async () => {\n    await web3Modal.clearCachedProvider()\n    setConnectedAddress('')\n    setConnected(false)\n  }, [])\n\n  useEffect(async () => {\n    const { cachedProvider } = web3Modal\n    if (cachedProvider) {\n      await onConnect()\n    }\n  }, [])\n\n  return (\n    <EthContext.Provider value={{\n      provider,\n      contracts,\n      signer,\n      connectedAddress,\n      connected,\n      onConnect,\n      onDisconnect,\n      loading\n    }}>\n      {children}\n    </EthContext.Provider>\n  )\n}\n\n\nexport const getContracts = (chain, provider) => ({\n  KBC: new ethers.Contract(getActiveContractAddresses().KBC, KBCABI, provider),\n  BlindAuction: new ethers.Contract(getActiveContractAddresses().BlindAuction, BlindAuctionABI, provider),\n})\n\n","\n/*\n{\n  hashedBid,\n  tokenId\n  bid\n  bidder\n  state\n}\n*/\n\nconst BID_INFO = '__bid_info__'\n\nfunction storeBid(bidInfo) {\n  const { bidder, hashedBid } = bidInfo\n  const storedBidInfo = JSON.parse(localStorage.getItem(BID_INFO)) || {}\n  const bidderInfo = storedBidInfo[bidder] || {}\n  bidderInfo[hashedBid] = bidInfo\n  storedBidInfo[bidder] = bidderInfo\n  localStorage.setItem(BID_INFO, JSON.stringify(storedBidInfo))\n}\n\nfunction updateBidState(bidder, hashedBid, state) {\n  const storedBidInfo = JSON.parse(localStorage.getItem(BID_INFO)) || {}\n  const bid = storedBidInfo?.[bidder]?.[hashedBid] || { hashedBid, bidder }\n  bid.state = state\n  localStorage.setItem(BID_INFO, JSON.stringify(storedBidInfo))\n}\n\nfunction getBids(bidder) {\n  const storedBidInfo = JSON.parse(localStorage.getItem(BID_INFO)) || {}\n  return storedBidInfo[bidder] || {}\n}\n\nexport default {\n  storeBid,\n  updateBidState,\n  getBids,\n}\n\n\nwindow.__clearLocalStorage = () => localStorage.removeItem(BID_INFO)\n\n\nexport async function refreshBidState(contracts, bidder) {\n  const createLogs = await contracts.BlindAuction.filters.CreateBid(null, null, bidder)\n  const createBids = await contracts.BlindAuction.queryFilter(createLogs)\n\n  const withdrawLogs = await contracts.BlindAuction.filters.WithdrawBid(null, bidder)\n  const withdrawBids = await contracts.BlindAuction.queryFilter(withdrawLogs)\n\n  const revealLogs = await contracts.BlindAuction.filters.RevealBid(null, null, null, bidder)\n  const revealBids = await contracts.BlindAuction.queryFilter(revealLogs)\n\n\n\n  createBids.forEach(bid => updateBidState(bidder, bid.args.hash, 'sealed'))\n  withdrawBids.forEach(bid => updateBidState(bidder, bid.args.hash, 'withdrawn'))\n  revealBids.forEach(bid => updateBidState(bidder, bid.args.hash, 'revealed'))\n  console.log(revealBids)\n}","import { useContext, useState, useEffect } from 'react'\nimport { ethers } from 'ethers'\nimport { EthContext } from './config'\nimport ls, { refreshBidState } from './localStorage'\nimport { pollCompletion } from './utils'\n\n\nconst nullAddr = '0x0000000000000000000000000000000000000000'\n\nexport const useEthContext = () => useContext(EthContext)\n\n\nconst BiddingPhases = {\n  0: 'Paused',\n  1: 'Bidding',\n  2: 'Reveal',\n  3: 'Claim',\n}\n\nexport function useBiddingPhase() {\n  const [biddingPhase, setBiddingPhase] = useState(0)\n  const { contracts, loading } = useEthContext()\n\n\n  useEffect(async () => {\n    if (!loading) {\n      const refresh = async () => {\n        const phase = await contracts.BlindAuction.auctionPhase()\n        setBiddingPhase(Number(phase.toString()))\n        setTimeout(refresh, 3000)\n      }\n      refresh()\n\n    }\n  }, [loading])\n\n  return biddingPhase\n}\n\n\nexport function useBids() {\n  const {contracts, signer, connectedAddress } = useEthContext()\n  const [outstandingBids, setOutstandingBids] = useState({})\n  const [isLoading, setIsLoading] = useState(false)\n\n  useEffect(async () => {\n    if (contracts && connectedAddress) {\n      await refreshBidState(contracts, connectedAddress)\n      setOutstandingBids(ls.getBids(connectedAddress))\n    }\n  }, [connectedAddress, contracts])\n\n  const addBid = bidInfo => {\n    ls.storeBid(bidInfo)\n    setOutstandingBids(ls.getBids(connectedAddress))\n  }\n\n  const updateBidState = (bidHash, bidState) => {\n    ls.updateBidState(connectedAddress, bidHash, bidState)\n    setOutstandingBids(ls.getBids(connectedAddress))\n  }\n\n\n  const submitBid = async (tokenId, bidAmount) => {\n    const hashedBid = await contracts.BlindAuction.hashBid(tokenId, ethers.utils.parseEther(bidAmount), connectedAddress)\n\n    setIsLoading(true)\n\n    await contracts.BlindAuction.connect(signer).placeSealedBid(hashedBid, { value: ethers.utils.parseEther('0.2') })\n\n    addBid({\n      hashedBid,\n      tokenId,\n      bid: bidAmount,\n      bidder: connectedAddress,\n      state: 'submitted'\n    })\n\n\n    const nonNullBidder = bid => bid.bidder !== nullAddr\n    await pollCompletion(\n      () => contracts.BlindAuction.hashToSealedBids(hashedBid).then(nonNullBidder),\n      1000\n    )\n\n    updateBidState(hashedBid, 'sealed')\n    setIsLoading(false)\n  }\n\n  const withdrawBid = async (hashedBid) => {\n    setIsLoading(true)\n    await contracts.BlindAuction.connect(signer).withdrawSealedBid(hashedBid)\n    const nullBidder = bid => bid.bidder === nullAddr\n    await pollCompletion(\n      () => contracts.BlindAuction.hashToSealedBids(hashedBid).then(nullBidder),\n      1000\n    )\n    updateBidState(hashedBid, 'withdrawn')\n    setIsLoading(false)\n  }\n\n  const revealBid = async (hashedBid, tokenId, bidAmount) => {\n    setIsLoading(true)\n    const highestBid = await contracts.BlindAuction.tokenIdToHighestUnsealedBid(tokenId)\n    const highestBidAmount = Number(ethers.utils.formatEther(highestBid.amount))\n\n    const amountToIncreaseBid = outstandingBids[hashedBid].bid > highestBidAmount\n      ? Math.max(Number(outstandingBids[hashedBid].bid - 0.2, 0))\n      : 0\n\n    await contracts.BlindAuction.connect(signer).unsealBid(\n      tokenId,\n      ethers.utils.parseEther(bidAmount),\n      { value: ethers.utils.parseEther(String(amountToIncreaseBid)) }\n    )\n\n    const nonNullBidder = bid => bid.bidder !== nullAddr\n    await pollCompletion(\n      () => contracts.BlindAuction.hashToSealedBids(hashedBid).then(nonNullBidder),\n      1000\n    )\n    updateBidState(hashedBid, 'revealed')\n    setIsLoading(false)\n  }\n\n  const claimToken = async (tokenId) => {\n    setIsLoading(true)\n    await contracts.BlindAuction.connect(signer).claimToken(tokenId)\n    await pollCompletion(\n      () => contracts.KBC.exists(tokenId),\n      1000\n    )\n    setIsLoading(false)\n  }\n\n  return {\n    bids: outstandingBids,\n    isLoading,\n    submitBid,\n    withdrawBid,\n    revealBid,\n    claimToken\n  }\n}\n\nexport function useTokenExists(tokenId) {\n  const { contracts } = useEthContext()\n  const [isLoading, setIsLoading] = useState(false)\n  const [exists, setExists] = useState(false)\n  const [owner, setOwner] = useState(false)\n\n  useEffect(async () => {\n    if (contracts) {\n      const exists = await contracts.KBC.exists(tokenId)\n      setExists(exists)\n      if (exists) {\n        const owner = await contracts.KBC.ownerOf(tokenId)\n        setOwner(owner)\n      }\n    }\n  }, [contracts])\n\n  return { exists, owner }\n}\n\nexport function useHighestBidder(tokenId) {\n  const [isLoading, setIsLoading] = useState(false)\n  const { contracts } = useEthContext()\n  const [highestBidder, setHighestBidder] = useState({ bidder: nullAddr, amount: 0 })\n\n  useEffect(async () => {\n    if (contracts) {\n      const highestBidder = await contracts.BlindAuction.tokenIdToHighestUnsealedBid(tokenId)\n      setHighestBidder(highestBidder)\n    }\n  }, [contracts])\n\n  return {\n    bidder: highestBidder.bidder,\n    amount: ethers.utils.formatEther(String(highestBidder.amount))\n  }\n}","import './Hero.css'\nimport Sketch from 'react-p5'\nimport { useState, useEffect } from 'react'\nlet i=0\nexport default function Hero() {\n  const [startTime, setStartTime] = useState(0)\n  // const [startTimeOffset, setStartTimeOffset] = useState(0)\n\n  // useEffect(() => {\n  //   setStartTime(Date.now())\n  // }, [])\n\n  // useEffect(() =>\n  //   window.addEventListener('resize', () => {\n  //     const x = Date.now()\n  //     // debugger\n  //     setStartTimeOffset(Date.now() - startTime)\n  //   }), [startTime]\n  // )\n\n\n  const setup = (p5, canvasRef) => {\n    p5.createCanvas(window.innerWidth, window.innerHeight*2).parent(canvasRef)\n  }\n\n  const draw = p5 => {\n    p5.noLoop()\n    p5.noStroke()\n    p5.colorMode(p5.HSL, 360, 100, 100, 100)\n\n\n    // if (Date.now() - (startTime + startTimeOffset) < 100) {\n    //   p5.clear()\n    //   for (let i = 0; i < startTimeOffset; i++) {\n    //     p5.circle(i/10 ,0,20)\n    //   }\n\n    // }\n\n    const a = 40\n    const colors = [\n      // p5.color(42, 88, 73, a),\n      // p5.color(44, 13, 60, a),\n      p5.color(47, 95, 70, a),\n      p5.color(15, 63, 61, a),\n      // p5.color(108, 44, 64, a),\n      // p5.color(124, 54, 76, a),\n      p5.color(168, 23, 71, a),\n      p5.color(221, 48, 70, a),\n    ]\n\n\n    times(300, i => {\n\n      const x = p5.random(0, p5.width)\n      const y = (p5.random() ** 3) * p5.height - 25\n      const cix = p5.noise(x/100, y/100)\n\n      let c\n\n      if (cix < 0.3) c = colors[0]\n      else if (cix < 0.5) c = colors[1]\n      else if (cix < 0.75) c = colors[2]\n      else if (cix < 1) c = colors[3]\n      // else if (cix < 1) c = colors[4]\n      // const cix = p5.int(\n      //   p5.map(\n      //     0,\n      //     1,\n      //     0,\n      //     4\n      //   )\n      // )\n      // const cix = p5.int(p5.random(colors.length))\n      // const c = colors[cix]\n      p5.fill(c)\n      // p5.circle(200, 200, 50)\n      // p5.circle(\n      //   x,\n      //   y,\n      //   p5.random(3, 20)\n      // )\n\n      noiseCircle(p5, x, y, p5.random(3, 20))\n    })\n\n    p5.translate(p5.width/2, p5.height/2)\n\n    // times(60, i => {\n\n    //   const pos = p5.random(0.00001, 0.00005) * (p5.random() < 0.5 ? 1 : -1)\n    //   const neg = p5.random(0.00001, 0.0001) * (p5.random() < 0.5 ? -1 : 1)\n\n    //   const direction = p5.random() < 0.5 ? 1 : -1\n\n    //   drawCurve(p5, 0, 0, 3200, p5.HALF_PI * direction, (angleD, i, points) => {\n    //     if (i < 600) {\n    //       return angleD + pos\n    //     } else {\n    //       return angleD + neg\n    //     }\n    //   })\n    // })\n\n\n\n\n\n\n      // angle += p5.map(\n      //   p5.noise((x+100)/50, (y+100)/50),\n      //   0,\n      //   1,\n      //   0,\n      //   p5.PI/20\n      // )\n\n  }\n\n  return (\n    <Sketch setup={setup} draw={draw} className=\"Hero\" />\n  )\n}\n\n// const iden = x => x\n// const defaultThick = i => 1+(i/40)\n// function drawCurve(p5, startX, startY, startAngle, len, colorFn, thickFn=defaultThick, changeFn=iden) {\n//   let angle = startAngle\n//   let angleChange = Math.PI/1600\n\n//   let x = startX\n//   let y = startY\n\n//   let i = 0\n//   while (i < len) {\n//   // while (i < len && angleChange < PI && angleChange > -PI) {\n//     p5.fill(colorFn(i, len))\n//     p5.circle(x, y, thickFn(i))\n//     ;([x, y] = getXYRotation(angle, 1, x, y))\n\n//     angle += angleChange\n//     angleChange = changeFn(angleChange, i, len)\n//     i++\n//   }\n// }\n\n\n\nfunction noiseCircle(p5, _x, _y, rad) {\n  const shapePointCount = 30\n  const shapeNoiseDivisor = 2\n\n  const shapeCoords = times(shapePointCount, point => {\n    const p = (point + shapePointCount) % shapePointCount\n    const progress = p * p5.TWO_PI / shapePointCount\n\n    const coords = getXYRotation(progress, 2, _x+1000, _y+1000)\n    const __x = (coords[0] + 200)/shapeNoiseDivisor\n    const __y = (coords[1] + 200)/shapeNoiseDivisor\n    const _z = 1/shapeNoiseDivisor\n    const _r = p5.map(p5.noise(__x, __y, _z), 0, 1, rad*0.5, rad*2)\n\n    return getXYRotation(\n      progress,\n      _r,\n      _x,\n      _y,\n    )\n  })\n\n\n  p5.beginShape()\n  p5.curveVertex(...shapeCoords[shapeCoords.length - 1])\n  shapeCoords.forEach(([x, y]) => {\n    p5.curveVertex(x, y)\n  })\n  p5.curveVertex(...shapeCoords[0])\n  p5.curveVertex(...shapeCoords[1])\n  p5.endShape()\n\n}\n\n\n\nconst drawCurve = (p5, startX, startY, points, startAngle, changeFn) => {\n  const colors = [\n    p5.color(15, 63, 51),\n    p5.color(42, 88, 73),\n    // p5.color(44, 13, 60),\n    p5.color(52, 95, 70),\n    p5.color(108, 24, 64),\n    p5.color(124, 54, 76),\n    p5.color(168, 23, 71),\n    p5.color(221, 38, 80),\n  ]\n  const cix = p5.int(p5.random(colors.length))\n  const c = colors[cix]\n  // const c = p5.color('red')\n\n  let angle = startAngle\n  let angleD = Math.PI/1600\n\n  let x = startX\n  let y = startY\n\n\n  for (let i = 0; i < points; i++) {\n    p5.fill(p5.color(\n      p5.hue(c),\n      p5.saturation(c),\n      83,\n      p5.map(i/points, 0, 1, 0, 100)\n    ))\n\n    p5.circle(x, y, (3 + i/15) * p5.random(0.3, 1.1))\n\n    ;([x, y] = getXYRotation(angle, 1, x, y))\n\n    angle += angleD\n    angleD = changeFn(angleD, i, points)\n    // console.log(angle, angleD)\n  }\n\n\n  // const posRate = p5.random(-0.0001, 0.0001)\n  // const negRate = p5.random(-0.0001, 0.0001)\n\n  // const changeRate = p5.random(0.992, 1.008)\n  // const direction = p5.random() < 0.5 ? 1 : -1\n\n  // let angle = p5.random(0, p5.TWO_PI)\n  // // let angle = (p5.random() < 0.5 ? p5.HALF_PI : -p5.HALF_PI)\n  // let x = 0\n  // let y = 0\n\n  // // const switchPoint = p5.random(0.3, 0.8)\n  // const points = 400\n  // times(points, i => {\n  //   // if (angleD >= p5.PI) return\n\n\n\n\n  //   ;([x, y] = getXYRotation(angle, 1, x, y))\n  //   // angle += p5.map(\n  //   //   p5.noise((x+100)/300, (y+100)/300),\n  //   //   0,\n  //   //   1,\n  //   //   0,\n  //   //   p5.PI/100\n  //   // )\n  //   angle += angleD\n\n  //   // angleD = p5.abs(angleD * changeRate) * direction\n\n\n\n  //   // angleD += 0.00005\n  //   if (i/points < switchPoint) {\n  //     angleD += posRate\n  //   } else {\n  //     angleD += negRate\n  //   }\n\n  // })\n}\n\nfunction getXYRotation (deg, radius, cx=0, cy=0) {\n  return [\n    Math.sin(deg) * radius + cx,\n    Math.cos(deg) * radius + cy,\n  ]\n}\n\nfunction times(t, fn) {\n  const out = []\n  for (let i = 0; i < t; i++) out.push(fn(i))\n  return out\n}\n\nconst hfix = h => Math.floor((h + 360)) % 360\n\n","\nimport './Main.css';\n\nimport { useState, useEffect, useRef } from 'react'\n\n\nimport { Link } from 'react-router-dom'\nimport { times, shuffle } from 'lodash'\nimport {Helmet} from 'react-helmet'\n\n\nimport { prettyNumber, fmt, getTimes, useCountdown } from './utils'\nimport { useBiddingPhase, useEthContext } from './hooks'\nimport { getActiveContractAddresses } from './config'\nimport Hero from './Hero'\n\n\n\n\n\nconst defaultGridSize = window.innerWidth < 750 ? 'large' : 'medium'\nexport default function Main() {\n  const [gridSize, setGridSize] = useState('xs')\n  const biddingPhase = useBiddingPhase()\n  const [portraitData, setPortraitData] = useState([])\n\n  useEffect(() => {\n    const data = shuffle(times(139, i => ({ tokenId: i + 1 }))).slice(0, 100)\n    setPortraitData(data)\n  }, [])\n\n\n\n  return (\n    <div className=\"Main\">\n\n      <Helmet>\n        <meta name=\"twitter:image\" content={'https://steviep.xyz/natural-flavors/assets/0.jpg'} />\n        <meta name=\"og:image\" property=\"og:image\" content={'https://steviep.xyz/natural-flavors/assets/0.jpg'}/>\n        <meta name=\"og:image:alt\" content=\"Natural Flavors\" />\n\n        <meta name=\"title\" content={'Natural Flavors'} />\n        <meta name=\"og:title\" content={'Natural Flavors'} />\n        <meta name=\"twitter:title\" content={'Natural Flavors'} />\n        <meta property=\"og:site_name\" content=\"Natural Flavors\" />\n\n        <meta name=\"twitter:description\" content={'Natural Flavors: A Photo Series by Steve Pikelny'} />\n        <meta name=\"description\" content={'Natural Flavors: A Photo Series by Steve Pikelny'} />\n        <meta name=\"og:description\" content={'Natural Flavors: A Photo Series by Steve Pikelny'} />\n\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta property=\"og:type\" content=\"website\" />\n\n        <meta property=\"og:url\" content={`https://steviep.xyz/natural-flavors`} />\n        <meta name=\"twitter:url\" content={`https://steviep.xyz/natural-flavors`} />\n        <meta name=\"keywords\" content=\"\" />\n\n        <title>{'The Keynsian Beauty Contest'}</title>\n      </Helmet>\n\n{/*\n*/}\n      <Hero />\n      <header>\n        <h1>\n          Who Will Win\n          The Keynesian\n          Beauty Contest?\n        </h1>\n        <h1>\n        </h1>\n        <h1>\n        </h1>\n\n        {\n          /*\n        <h2><Link to=\"/about\">The Background</Link></h2>\n        <h2><Link to=\"/about\">The Rules</Link></h2>\n          */\n        }\n      </header>\n\n\n\n\n\n\n{/*\n      <div className=\"blue\" />\n      <div className=\"red\" />\n      <div className=\"green\" />\n\n      <section className=\"center\">\n\n          <div>\n            <label>GRID SIZE</label>\n            <select defaultValue={'xs'} onChange={e => setGridSize(e.target.value)}>\n              <option value=\"xs\">Extra Small</option>\n              <option value=\"small\">Small</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"large\">Large</option>\n            </select>\n          </div>\n\n      </section>\n*/}\n\n\n\n      <section className={`thumbnailGrid`}>\n        <div style={{\n          gridColumnStart: 0,\n          gridColumnEnd: 'span 2',\n\n          border: '2px solid',\n          backgroundColor: 'hsl(60deg 71% 99%)',\n          padding: '0.5em',\n          textAlign: 'center'\n        }}>\n\n        <h2>\n          {biddingPhase === 1\n            ? 'Bidding will close on X/X at X:00'\n            : 'Bidding will begin on X/X at XX:XX EST'\n          }\n        </h2>\n\n        </div>\n        <div style={{\n          gridColumnStart: 4,\n          gridColumnEnd: '6',\n          gridRowStart: 2,\n          gridRowEnd: 'span 2',\n          border: '2px solid',\n          backgroundColor: 'hsl(60deg 71% 99%)',\n          padding: '0.7em',\n          fontSize: '1.85em',\n        }}>\n          Posed as a thought experiment by economist John Meynerd Keynes in 1936 to describe the pricing dynamics of financial markets, the Keynesian Beauty Contest is no ordinary beauty contest.\n        </div>\n\n\n        <div style={{\n          gridColumnStart: 0,\n          gridColumnEnd: 'span 1',\n\n          gridRowStart: 4,\n          gridRowEnd: 'span 2',\n          border: '2px solid',\n          backgroundColor: 'hsl(60deg 71% 99%)',\n          padding: '0.5em',\n          fontSize: '1.4em'\n        }}>\n          In an ordinary beauty contest, judges vote for contestants who they consider the most beautiful. The contestant who receives the most votes is the winner.\n        </div>\n        <div style={{\n          gridColumnStart: 2,\n          gridColumnEnd: 'span 2',\n\n          gridRowStart: 5,\n          gridRowEnd: 'span 1',\n          border: '2px solid',\n          backgroundColor: 'hsl(60deg 71% 99%)',\n          padding: '0.75em',\n          fontSize: '1.2em'\n        }}>\n          But in a Keynesian beauty contest the judges compete amongst one another: Rather than vote with their own sensibilities, they vote for the contestant they believe will get the most votes from the other judges.\n        </div>\n\n        <div style={{\n          gridColumnStart: 4,\n          gridColumnEnd: 'span 2',\n          gridRowStart: 7,\n          gridRowEnd: 'span 1',\n          border: '2px solid',\n          backgroundColor: 'hsl(60deg 71% 99%)',\n          padding: '0.5em',\n          fontSize: '1.1em'\n        }}>\n          The contest is not about what we find beautiful, or even what we think the group finds beautiful on average.\n        </div>\n\n\n        <div style={{\n          gridColumnStart: 0,\n          gridColumnEnd: 'span 3',\n          gridRowStart: 9,\n          gridRowEnd: 'span 1',\n          border: '2px solid',\n          backgroundColor: 'hsl(60deg 71% 99%)',\n          padding: '0.5em',\n          fontSize: '1.5em'\n        }}>\n          Keynes notes: \"We have reached the third degree where we devote our intelligences to anticipating what average opinion expects the average opinion to be. And there are some, I believe, who practise the fourth, fifth and higher degrees.\"\n        </div>\n\n        {portraitData.map((d, i) => <div key={`thumbnail-${i}`}><Thumbnail data={d} key={d.tokenId} /></div>) }\n      </section>\n\n\n      <Connect />\n      <h2 style={{ textAlign: 'center', wordWrap: 'break-word', padding: '1em'}}>\n        <div><a href={`https://etherscan.io/address/${getActiveContractAddresses().KBC}`} target=\"_blank\" rel=\"nofollow\">Token Contract</a></div>\n        <div><a href={`https://etherscan.io/address/${getActiveContractAddresses().BlindAuction}`} target=\"_blank\" rel=\"nofollow\">Auction Contract</a></div>\n        <div><a href={`https://etherscan.io/address/${getActiveContractAddresses().TokenURI}`} target=\"_blank\" rel=\"nofollow\">Metadata Contract</a></div>\n        <div><a href={`https://ipfs.io/ipfs/`} target=\"_blank\" rel=\"nofollow\">IPFS</a></div>\n      </h2>\n\n\n    </div>\n\n  );\n}\n\n\n\nfunction Thumbnail({ data }) {\n\n  return (\n    <Link to={`/participants/${data.tokenId}`}>\n      <div className={`Thumbnail`}>\n        <div className=\"Thumbnail-overlay\">Alice</div>\n        <div>\n          <img src={`./assets/${data.tokenId}.jpeg`} loading=\"lazy\" />\n        </div>\n        {/*{data.tokenId}*/}\n      </div>\n    </Link>\n  )\n}\n\nfunction Connect() {\n  const {\n    provider,\n    signer,\n    connectedAddress,\n    connected,\n    onConnect,\n    onDisconnect\n  } = useEthContext()\n\n  return (\n    <section>\n      <button onClick={onConnect}>Connect</button>\n      <button onClick={onDisconnect}>Disconnect</button>\n      {connectedAddress}\n    </section>\n  )\n\n}\n\n","import './Page.css'\nimport { useParams } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\nimport { ethers } from 'ethers'\n\nimport { Link } from 'react-router-dom'\nimport {Helmet} from 'react-helmet'\n\nimport { pollCompletion } from './utils'\nimport { useEthContext, useBiddingPhase, useBids, useHighestBidder, useTokenExists } from './hooks'\nimport ls, { refreshBidState } from './localStorage'\n\n\n\n\n\n\n\nexport default function Page() {\n  const { id } = useParams()\n  const {contracts, connectedAddress } = useEthContext()\n  const { exists: tokenExists, owner: tokenOwner } = useTokenExists(id)\n\n\n\n  return (\n    <div className=\"Page\">\n\n\n      <header >\n        <Link to=\"/\"><h2>{'< Back'}</h2></Link>\n        <h2 style={{ margin: 'initial'}}>{`Keynesian Beauty Contest`}</h2>\n      </header>\n\n      <section className=\"pageSection\">\n        <div className=\"photo\">\n          <a href={`../assets/${id}.jpeg`} target=\"_blank\">\n            <img src={`../assets/${id}.jpeg`} />\n          </a>\n        </div>\n      </section>\n\n      {tokenExists\n        ? `Portrait Owner: ${tokenOwner}`\n        : connectedAddress\n          ? <BiddingForm id={id} />\n          : <h2>Please Connect your wallet to bid</h2>\n      }\n\n    </div>\n  )\n}\n\n\n\n\n\nfunction BiddingForm({ id }) {\n  const {contracts, signer, connectedAddress } = useEthContext()\n\n  const [bidAmount, setBidAmount] = useState('')\n  const { bids, isLoading, submitBid, withdrawBid, revealBid, claimToken } = useBids()\n  const biddingPhase = useBiddingPhase()\n  const highestBidder = useHighestBidder(id)\n\n  return (\n    <section>\n      <h2>Place Blind Bid</h2>\n      <p>This will require a 0.2 ETH stake</p>\n\n\n\n      {biddingPhase == 2\n        ? `Highest Active Bid: ${highestBidder.amount}` + (highestBidder.bidder === connectedAddress ? ' (Placed by you)' : '')\n        : ''\n      }\n\n      {biddingPhase == 3\n        ? `Winning Bid: ${highestBidder.amount}`\n        : ''\n      }\n\n      {biddingPhase == 3 && highestBidder.bidder === connectedAddress\n        ? <button onClick={() => claimToken(id)}>Claim Token</button>\n        : ''\n      }\n\n      {biddingPhase === 1\n        ? <div>\n            <input value={bidAmount} placeholder=\"0.2 E\" onChange={e => setBidAmount(e.target.value)} type=\"number\" />\n            <button onClick={() => submitBid(id, bidAmount)}>\n              Place Bid\n            </button>\n          </div>\n        : ''\n      }\n\n      {biddingPhase === 1 || biddingPhase === 2\n        ? <>\n            <a href=\"/\">Learn more about the bidding process</a>\n            {isLoading ? 'bid pending...' : ''}\n            {Object.values(bids)\n              .filter(bid => bid.tokenId === id)\n              .map((bid, i) =>\n                <BidRow\n                  bid={bid}\n                  withdrawBid={() => withdrawBid(bid.hashedBid)}\n                  revealBid={() => revealBid(bid.hashedBid, bid.tokenId, bid.bid)}\n                  key={i}\n                />)\n            }\n          </>\n        : ''\n      }\n    </section>\n  )\n}\n\nfunction BidRow({ bid, withdrawBid, revealBid }) {\n  const {contracts, signer, connectedAddress } = useEthContext()\n  const biddingPhase = useBiddingPhase()\n\n  return (\n    <div>\n      {bid.bid}\n      {bid.state}\n      {biddingPhase === 1 && bid.state === 'sealed' ? <button onClick={withdrawBid}>Widthdraw Bid</button> : false}\n      {biddingPhase === 2 && bid.state === 'sealed' ? <button onClick={revealBid}>Reveal Bid</button> : false}\n\n    </div>\n  )\n}","import './About.css'\n\nexport default function About() {\n  return (\n    <main>\n      <section>\n        <h2>\n          Welcome to The Keynesian Beauty Contest\n        </h2>\n        <p>\n          Posed as a thought experiment by economist John Meynerd Keynes in 1936 to describe the pricing dynamics of the stock market, the Keynesian beauty contest is no ordinary beauty contest.\n          In an ordinary beauty contest, judges vote for who they think is the most beautiful. The winner is the contestant who receives the most votes.\n          But in a Keynesian beauty contest, the judges compete against one another: They vote not for who they themeselves think is the most beautiful, but rather for the contestant they believe will get the most votes from the other judges.\n          As Keynes notes, it no longer becomes what we think is beautiful, or even what we think the average of the group thinks is beautiful:\n          \"We have reached the third degree where we devote our intelligences to anticipating what average opinion expects the average opinion to be. And there are some, I believe, who practise the fourth, fifth and higher degrees.\"\n        </p>\n\n        <p>\n          In this particular Keynesian beauty contest, which takes place as a blind auction, participants can acquire portraits of our lovely contestants with two strategies.\n          In one strategy, they can simply choose to bid on the portraits they would most like to own, and only bid what they think it is worth to them -- no more, and no less.\n          In the other strategy, participants may choose to play the Keynesian beauty contest game by ignoring their own preferences in favor of their perception of the perceptions of others.\n        </p>\n\n        <p>\n          For either approach, participants are encouraged to reflect on the personal and social nature of purchasing art.\n        </p>\n      </section>\n\n      <section>\n        <h2>The Rules of the Game</h2>\n        <p>The Keynesian Beauty contest is conducted as a blind auction, split into three stages: Bidding, Reveal, and Withdrawl.</p>\n\n        <h3>Bidding</h3>\n        <p>In this stage, participants submit sealed bids for their selected portraits. While others will be able to see that a specific address has made a bid, no one except the bidder will know the amount of the bid or which portrait is being bid on. Additionally, the bidder will be required to stake 0.2 ETH of collateral per bid. This is the only stage in which bids can be made or withdrawn.</p>\n\n        <h3>Reveal</h3>\n        <p>Upon the completion of the Bidding stage, participants will be expected to reveal their bids. If this is the highest revealed bid for the token, the participant must increase their stake to match their bid. If their bid is less than their staked collateral, they will be refunded. If they are not the highest bidder (or there is a subsequently higher bidder), their stake will automatically be refunded. <strong>If a bid is not revealed in this stage, the participant will lose their stake.</strong></p>\n\n        <h3>Withdrawl</h3>\n        <p>At this stage, the auction is complete and winners have been determined. Winners mat now claim their token(s). Losers will have been refunded their initial stake. Anyone who has not revealed their bid in the previous stage will have lost their stake.</p>\n      </section>\n\n      <section>\n        <h2>FAQ</h2>\n        <h3>How are the bids sealed?</h3>\n        <h3>How does the Keynesian Beauty Contest website keep track of my bid info?</h3>\n        <h3>What happens if there is a tie inthe bidding?</h3>\n        <h3>How much gas will all of this cost?</h3>\n        <p>Gas for the full auction lifecycly should cost between 200000 and 250000 gwei per bid. With a gas price of 100, this works out to between 0.02 and 0.025 ETH. As compensation for gas paid, all participants who unseal a bid for 0.1 ETH or higher will receive a free consolation prize token.</p>\n      </section>\n    </main>\n  )\n}","import './Bids.css'\nimport { useEthContext, useBiddingPhase, useBids, useHighestBidder } from './hooks'\n\nexport default function Bids() {\n  const { bids, isLoading, submitBid, withdrawBid, revealBid, claimToken } = useBids()\n\n  return (\n    <div>\n      {Object.values(bids)\n        .map((bid, i) =>\n          <BidRow\n            bid={bid}\n            withdrawBid={() => withdrawBid(bid.hashedBid)}\n            revealBid={() => revealBid(bid.hashedBid, bid.tokenId, bid.bid)}\n            claimToken={() => claimToken(bid.tokenId)}\n            key={i}\n          />\n        )\n      }\n    </div>\n  )\n}\n\n\nfunction BidRow({ bid, withdrawBid, revealBid, claimToken }) {\n  const {contracts, signer, connectedAddress } = useEthContext()\n  const biddingPhase = useBiddingPhase()\n  const highestBidder = useHighestBidder(bid.tokenId)\n\n\n  return (\n    <div>\n      {bid.tokenId + ' -- '}\n      {bid.bid + ' -- '}\n      {bid.state + ' -- '}\n      {biddingPhase === 1 ? <button onClick={withdrawBid}>Widthdraw Bid</button> : false}\n      {biddingPhase === 2 ? <button onClick={revealBid}>Reveal Bid</button> : false}\n      {biddingPhase === 3 && highestBidder.bidder === connectedAddress ? <button onClick={revealBid}>Claim</button> : false}\n    </div>\n  )\n}","import './Dev.css'\nimport { useEthContext, useBiddingPhase, useBids } from './hooks'\n\nconst BiddingPhases = {\n  0: 'Paused',\n  1: 'Bidding',\n  2: 'Reveal',\n  3: 'Claim',\n}\n\nexport default function Dev() {\n  // const { Dev, addBid, updateBidState } = useLocalBidState()\n\n  const {\n    provider,\n    contracts,\n    signer,\n    connectedAddress,\n    connected,\n    onConnect,\n    onDisconnect,\n    loading\n  } = useEthContext()\n  const biddingPhase = useBiddingPhase()\n\n  const setBidding = () => contracts.BlindAuction.connect(signer).changeAuctionPhaseBidding()\n  const setPaused = () => contracts.BlindAuction.connect(signer).changeAuctionPhasePaused()\n  const setReveal = () => contracts.BlindAuction.connect(signer).changeAuctionPhaseReveal()\n  const setClaim = () => contracts.BlindAuction.connect(signer).changeAuctionPhaseClaim()\n\n\n  return (\n    <div>\n      Current Phase: {BiddingPhases[biddingPhase]}\n      <button onClick={setBidding}>Move to Bidding</button>\n      <button onClick={setPaused}>Move to Paused</button>\n      <button onClick={setReveal}>Move to Reveal</button>\n      <button onClick={setClaim}>Move to Claim</button>\n    </div>\n  )\n}\n\n\n","\nimport './App.css';\n\nimport { useState, useEffect, useCallback } from 'react'\nimport { BrowserRouter, Route, Routes, useLocation } from 'react-router-dom'\n\nimport Main from './Main'\nimport Page from './Page'\nimport About from './About'\nimport Bids from './Bids'\nimport Dev from './Dev'\n\n\nimport { useEthContext } from './hooks'\n\n\n\nexport function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n\n\n\nconst basename = window.location.href.includes('steviep.xyz/keynes')\n  ? '/keynes'\n  : '/'\n\n\n\n\nfunction App() {\n\n\n  return (\n    <>\n      <BrowserRouter basename={basename}>\n        <ScrollToTop />\n        <Routes>\n          <Route\n            path=\"/participants/:id\"\n            element={\n              <Page />\n            }\n          />\n\n          <Route\n            exact\n            path=\"/\"\n            element={\n              <Main />\n            }\n          />\n\n          <Route\n            exact\n            path=\"/about\"\n            element={\n              <About />\n            }\n          />\n\n          <Route\n            exact\n            path=\"/bids\"\n            element={\n              <Bids />\n            }\n          />\n\n          <Route\n            exact\n            path=\"/dev\"\n            element={\n              <Dev />\n            }\n          />\n\n        </Routes>\n      </BrowserRouter>\n      <footer>\n        <div>\n          <div><a href=\"https://twitter.com/steviepxyz\" target=\"_blank\" rel=\"nofollow\">twitter</a></div>\n          <div><a href=\"https://discord.gg/9uA8WBFpcB\" target=\"_blank\" rel=\"nofollow\">discord</a></div>\n          <div>(c) 2022</div>\n        </div>\n      </footer>\n    </>\n  )\n}\n\nexport default App;\n\n\n\n","import React from 'react';\nimport { render } from 'react-snapshot';\nimport './index.css';\nimport App from './App';\nimport { EthContextProvider } from './config'\n\n\n\nwindow.CONTRACT_ADDR = '0xBD1cA111380B436350034c7040E7C44949605702'\n\n\n\n\nrender(\n  <React.StrictMode>\n    <EthContextProvider>\n      <App />\n    </EthContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}